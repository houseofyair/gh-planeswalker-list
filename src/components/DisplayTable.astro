---
import SvgDownloader from "../components/SvgDownloader.astro";
import type { PlaneswalkerCard } from "../data/scryfall.api";

interface Props {
	data: Array<PlaneswalkerCard>;
}

const { data } = Astro.props as Props;

const formatCurrency = (value: number) =>
	new Intl.NumberFormat("en-CA", { style: "currency", currency: "CAD" }).format(value);

const truncate = (value: string, size: number) => (value.length > size ? `${value.substring(0, size)}...` : value);
---

<ul id="list" class="flex-grow-1 overflow-y-auto">
	{
		data.map((card: PlaneswalkerCard) => (
			<li
				data-image-src={card.image_src}
				class="w-100% light:odd:bg-slate-200 light:even:bg-amber-100 light:text-black dark:odd:bg-[#283d3b] dark:even:bg-[#001524] dark:text-white px-2 py-1 flex flex-row border-b-1 border-b-style-solid border-b-black"
			>
				<div class="flex flex-col flex-1">
					<div>
						<strong>{card.display_name}</strong>
					</div>
					<div class="flex flex-row">
						<SvgDownloader iconSrc={card.set_icon} class="w-4 h-4 my-auto mr-1" />
						{truncate(card.set_name, 30)} â€¢ {card.set}
					</div>
				</div>
				<div class="flex flex-col flex-initial w-20 text-right">
					<div>#{card.collector_number}</div>
					<div>
						{card.price ? formatCurrency(card.price) : "---"}
						{card.isFoil ? <span>F</span> : ""}
					</div>
				</div>
			</li>
		))
	}
</ul>

<script>
	document.querySelector("ul")!.addEventListener("click", (event) => {
		const li = (event.target as Element).closest("li")!;
		const dialog = document.getElementsByTagName("dialog")[0];

		let el = document.createElement("img");
		el.setAttribute("src", li.dataset.imageSrc!);

		dialog.innerHTML = "";
		dialog.appendChild(el);
		dialog.showModal();
	});

	document.getElementById("dialog")?.addEventListener("click", (event: MouseEvent) => {
		const dialog = (event.target as Element).closest("dialog")!;
		dialog.close();
	});
</script>
